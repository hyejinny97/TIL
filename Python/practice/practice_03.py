# 예제1. 기초함수
# 문제: 숫자 n을 받아 세제곱 결과를 반환하는 함수 cube를 정의하시오. (cube 함수를 호출하여 12의 세제곱 결과를 출력하시오.)
# 접근방법
'''
parameter로 숫자 n을 받아 세제곱한 결과를 반환하는 cube함수 선언한 후 호출
'''
# 코드
def cube(num):
    return num ** 3

n = 12
print(cube(n))



# 예제2.기초함수
# 문제: 가로와 세로의 길이를 각각 a, b로 받아 사각형 넓이와 둘레를 함께 반환하는 함수 rectangle을 정의하시오. 
'''
사각형이 가로가 20, 세로가 30일 때의 결과를 출력하시오.

* 사각형 넓이 : 가로 * 세로 
* 사각형 둘레 : (가로 + 세로) * 2
'''
# 접근방법
'''
가로길이와 세로길이를 인자로 받아 사각형 넓이와 둘레를 함께 반환하는 rectangle함수를 선언한 후 호출
'''
# 코드
def rectangle(a, b):
    area = a * b
    round = (a + b) * 2
    return area, round

print(rectangle(20, 30))



# 문제9: 득표 수 구하기
# 문제: 주어진 리스트가 반장 선거 투표 결과일 때 이영희의 총 득표수를 출력하시오.
# 접근방법
'''
students변수를 for 반복문을 돌면서 학생 한명씩 '이영희'인지 확인하면서 득표수를 카운트
'''
# 코드
students = ['이영희', '김철수', '이영희', '조민지', '김철수', '조민지', '이영희', '이영희']
cnt = 0
for student in students:
    if student == '이영희':
        cnt += 1
print(cnt)



# 문제10: 5의 개수 구하기
# 문제: 주어진 리스트의 요소 중에서 5의 개수를 출력하시오.
# 접근방법
'''
1. numbers 리스트를 for반복문을 돌면서 각 숫자가 5인지 확인
2. 5가 맞으면 1씩 증가시켜 카운트
'''
# 코드
numbers = [7, 17, 10, 5, 4, 3, 17, 5, 2, 5]
cnt = 0
for num in numbers:
    if num == 5:
        cnt += 1
print(cnt)



# 문제11: 구구단 출력하기
# 문제: 2단부터 9단까지 반복하여 구구단을 출력하세요.(* 문자열 출력시 f-string을 활용하면 편하게 작성할 수 있습니다.)
# 접근방법
'''
1. dan = 2부터 dan = 9까지 for 반복문을 돌리면서
2. 중첩 반복문으로 다시 안에 n = 1부터 n = 9까지 반복을 돌림
3. f-string을 이용해 dan x n = 곱한값 형태로 출력
'''
# 코드
for dan in range(2, 9 + 1):
    print(f"{dan}단")
    for n in range(1, 9 + 1):
        print(f"{dan} X {n} = {dan * n}")



# 문제12: 문자열 조작하기
# 문제: 주어진 문자열 word가 주어질 때, 해당 단어에서 ‘a’를 모두 제거한 결과를 출력하시오.
# 접근방법
'''
for 반복문을 돌면서 word의 한글자씩 읽어가면서 'a'가 아닌 것만 따로 변수에 저장해 출력
'''
# 코드
word = 'apple'
rst = ''
for char in word:
    if char != 'a':
        rst += char
print(rst)



# 문제13: 문자열 조작하기
# 문제: 주어진 문자열 word가 주어질 때, 해당 단어를 역순으로 뒤집은 결과를 출력하시오.
# 접근방법
'''
문자열 word는 시퀀스형 데이터타입이므로 [::-1]을 통해 문자열을 쉽게 뒤집을 수 있다
'''
# 코드
word = 'apple'
print(word[::-1])